languagesystem DFLT dflt;
languagesystem gjr2 dflt;
languagesystem gujr dflt;

include (markclasses.fea);
include (classes.fea);
include (lookups.fea);



#################
# BASIC SHAPING #
#################


# NUKTA FORMS
##############

# feature nukt {	
# } nukt;


# AKHAND LIGATURES
###################

feature akhn {
	lookup akhn;
} akhn;


# REPH
#######

feature rphf {
	lookup rphf;
} rphf;


# RAKAR FORMS
##############

feature rkrf {

  script DFLT;
    lookup rkrf_new;

  script gjr2;
    lookup rkrf_new;

} rkrf;


# BELOW-BASE FORMS
###################

feature blwf {

  script DFLT;
    lookup blwf_new;

  script gjr2;
    lookup blwf_new;

  script gujr;
    lookup blwf_old;

} blwf;


# HALF FORMS
#############

feature half {

  script DFLT;
    lookup half;
    lookup half_new;

  script gjr2;
    lookup half;
    lookup half_new;

  script gujr;
    lookup half;
    lookup half_old;

} half;


# VATTU VARIANTS
#################

feature vatu {
  	script gujr;
    	lookup vatu_old;
} vatu;


# CONJUNCTS
############

feature cjct {
	
	script DFLT;
		lookup cjct_new;

	script gjr2;
		lookup cjct_new;

} cjct;




################################
# MANDATORY PRESENTATION FORMS #
################################


# PRE-BASE SUBSTITUTION
########################


feature pres {

	script DFLT;
#    	lookup pres_decompose;
    	lookup pres;
    	lookup pres_new;
#    	lookup ikar_matching;

	script gjr2;
#    	lookup pres_decompose;
    	lookup pres;
    	lookup pres_new;
#    	lookup ikar_matching;

	script gujr;
#    	lookup pres_decompose;
    	lookup pres;
    	lookup pres_old;
#    	lookup ikar_matching;

} pres;


# ABOVE-BASE SUBSTITUTION
##########################

feature abvs {
#	lookup abvs_ra_matra_vocalic_liquids;
	lookup abvs;
  lookup abvs_ikar;
	lookup abvs_J;

  lookup abvs_hf_reph;
  lookup abvs_hf_reph_anusvara;
  lookup abvs_hf_removeReph;

  lookup abvs_ikar_reph_anusvara;
  lookup abvs_ikar_reph;
  lookup abvs_removeReph;

} abvs;


# BELOW-BASE SUBSTITUTIONS
###########################

feature blws {
	lookup blws;
} blws;


# POST-BASE SUBSTITUTION
#########################

feature psts {
	lookup psts;
	lookup ikar_matching;
	lookup iikar_matching;

  lookup psts_hf_reph;

} psts;


# HALANT FORMS
###############

feature haln {
	lookup haln;
} haln;



####################################
# DISCRETIONARY PRESENTATION FORMS #
####################################


# CONTEXTUAL ATERNATES
#######################

feature calt {
	lookup halfForm_calt;
} calt;



###############
# POSITIONING #
###############


# DISTANCE
###########

feature dist {
	lookup dist;
} dist;

feature kern {
  include (kern.fea);
} kern;


# ABOVE-BASE MARKS
###################

feature abvm {
	lookup abvm;
#  lookup abvm_reph;
} abvm;


# BELOW-BASE MARKS
###################

feature blwm {
	lookup blwm;
} blwm;


###################


feature frac {

  sub one slash four by onequarter;
  sub one slash two by onehalf;
  sub three slash four by threequarters;
  sub one slash three by onethird;
  sub two slash three by twothirds;
  sub one slash eight by oneeighth;
  sub three slash eight by threeeighths;
  sub five slash eight by fiveeighths;
  sub seven slash eight by seveneighths;

} frac;

feature ordn {

  sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
  sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;

} ordn;

feature sups {

  sub one by onesuperior;
  sub two by twosuperior;
  sub three by threesuperior;
  sub four by foursuperior;
  sub five by fivesuperior;
  sub six by sixsuperior;
  sub seven by sevensuperior;
  sub eight by eightsuperior;
  sub nine by ninesuperior;
  sub zero by zerosuperior;
  sub parenleft by parenleftsuperior;
  sub parenright by parenrightsuperior;

} sups;

feature sinf {

  sub one by oneinferior;
  sub two by twoinferior;
  sub three by threeinferior;
  sub four by fourinferior;
  sub five by fiveinferior;
  sub six by sixinferior;
  sub seven by seveninferior;
  sub eight by eightinferior;
  sub nine by nineinferior;
  sub zero by zeroinferior;
  sub parenleft by parenleftinferior;
  sub parenright by parenrightinferior;

} sinf;

feature liga {
  
  sub f i by fi;
  sub f l by fl;
  sub f b by fb;
  sub f h by fh;
  sub f k by fk;
  sub f t by ft;
  sub f j by fj;

} liga;